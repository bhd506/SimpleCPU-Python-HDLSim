$date
   Sat May 10 18:42:02 2025 UTC
$end
$version
    MyHDL 0.11.51
$end
$timescale
    1ns
$end

  $scope module ALUTest $end
    $var reg 8 ! A $end
    $var reg 8 " B $end
    $var reg 3 # CTL $end
    $var reg 8 $ Y $end
    $scope module alu0 $end
      $var reg 8 ! A $end
      $var reg 8 " B $end
      $var reg 3 # CTL $end
      $var reg 8 $ Y $end
      $var reg 8 % ADD_SUB $end
      $var reg 8 & AND $end
      $scope module add_sub_80 $end
        $var reg 8 ! A $end
        $var reg 8 " B $end
        $var reg 1 ' CTL $end
        $var reg 8 % SUM $end
        $var reg 8 ( XOR_OUT $end
        $var reg 8 ) CTL_BUS $end
        $scope module xor_20 $end
          $var reg 8 " A $end
          $var reg 8 ) B $end
          $var reg 8 ( Y $end
        $upscope $end
        $scope module add_80 $end
          $var reg 8 ! A $end
          $var reg 8 ( B $end
          $var reg 1 ' CIN $end
          $var reg 8 % SUM $end
          $scope module SUM_bits $end
            $var reg 1 * SUM_bits(0) $end
            $var reg 1 + SUM_bits(1) $end
            $var reg 1 , SUM_bits(2) $end
            $var reg 1 - SUM_bits(3) $end
            $var reg 1 . SUM_bits(4) $end
            $var reg 1 / SUM_bits(5) $end
            $var reg 1 0 SUM_bits(6) $end
            $var reg 1 1 SUM_bits(7) $end
          $upscope $end
          $scope module COUTs $end
            $var reg 1 2 COUTs(0) $end
            $var reg 1 3 COUTs(1) $end
            $var reg 1 4 COUTs(2) $end
            $var reg 1 5 COUTs(3) $end
            $var reg 1 6 COUTs(4) $end
            $var reg 1 7 COUTs(5) $end
            $var reg 1 8 COUTs(6) $end
          $upscope $end
          $scope module full_adder0 $end
            $var reg 1 9 A $end
            $var reg 1 : B $end
            $var reg 1 ' CIN $end
            $var reg 1 * SUM $end
            $var reg 1 2 COUT $end
            $var reg 1 ; SUM_1 $end
            $var reg 1 < COUT_1 $end
            $var reg 1 = COUT_2 $end
            $scope module half_adder0 $end
              $var reg 1 9 A $end
              $var reg 1 : B $end
              $var reg 1 ; SUM $end
              $var reg 1 < CARRY $end
              $scope module xor_21 $end
                $var reg 1 9 A $end
                $var reg 1 : B $end
                $var reg 1 ; Y $end
              $upscope $end
              $scope module and_20 $end
                $var reg 1 9 A $end
                $var reg 1 : B $end
                $var reg 1 < Y $end
              $upscope $end
            $upscope $end
            $scope module half_adder1 $end
              $var reg 1 ' A $end
              $var reg 1 ; B $end
              $var reg 1 * SUM $end
              $var reg 1 = CARRY $end
              $scope module xor_22 $end
                $var reg 1 ' A $end
                $var reg 1 ; B $end
                $var reg 1 * Y $end
              $upscope $end
              $scope module and_21 $end
                $var reg 1 ' A $end
                $var reg 1 ; B $end
                $var reg 1 = Y $end
              $upscope $end
            $upscope $end
            $scope module or_20 $end
              $var reg 1 < A $end
              $var reg 1 = B $end
              $var reg 1 2 Y $end
            $upscope $end
          $upscope $end
          $scope module full_adder1 $end
            $var reg 1 > A $end
            $var reg 1 ? B $end
            $var reg 1 2 CIN $end
            $var reg 1 + SUM $end
            $var reg 1 3 COUT $end
            $var reg 1 @ SUM_1 $end
            $var reg 1 A COUT_1 $end
            $var reg 1 B COUT_2 $end
            $scope module half_adder2 $end
              $var reg 1 > A $end
              $var reg 1 ? B $end
              $var reg 1 @ SUM $end
              $var reg 1 A CARRY $end
              $scope module xor_23 $end
                $var reg 1 > A $end
                $var reg 1 ? B $end
                $var reg 1 @ Y $end
              $upscope $end
              $scope module and_22 $end
                $var reg 1 > A $end
                $var reg 1 ? B $end
                $var reg 1 A Y $end
              $upscope $end
            $upscope $end
            $scope module half_adder3 $end
              $var reg 1 2 A $end
              $var reg 1 @ B $end
              $var reg 1 + SUM $end
              $var reg 1 B CARRY $end
              $scope module xor_24 $end
                $var reg 1 2 A $end
                $var reg 1 @ B $end
                $var reg 1 + Y $end
              $upscope $end
              $scope module and_23 $end
                $var reg 1 2 A $end
                $var reg 1 @ B $end
                $var reg 1 B Y $end
              $upscope $end
            $upscope $end
            $scope module or_21 $end
              $var reg 1 A A $end
              $var reg 1 B B $end
              $var reg 1 3 Y $end
            $upscope $end
          $upscope $end
          $scope module full_adder2 $end
            $var reg 1 C A $end
            $var reg 1 D B $end
            $var reg 1 3 CIN $end
            $var reg 1 , SUM $end
            $var reg 1 4 COUT $end
            $var reg 1 E SUM_1 $end
            $var reg 1 F COUT_1 $end
            $var reg 1 G COUT_2 $end
            $scope module half_adder4 $end
              $var reg 1 C A $end
              $var reg 1 D B $end
              $var reg 1 E SUM $end
              $var reg 1 F CARRY $end
              $scope module xor_25 $end
                $var reg 1 C A $end
                $var reg 1 D B $end
                $var reg 1 E Y $end
              $upscope $end
              $scope module and_24 $end
                $var reg 1 C A $end
                $var reg 1 D B $end
                $var reg 1 F Y $end
              $upscope $end
            $upscope $end
            $scope module half_adder5 $end
              $var reg 1 3 A $end
              $var reg 1 E B $end
              $var reg 1 , SUM $end
              $var reg 1 G CARRY $end
              $scope module xor_26 $end
                $var reg 1 3 A $end
                $var reg 1 E B $end
                $var reg 1 , Y $end
              $upscope $end
              $scope module and_25 $end
                $var reg 1 3 A $end
                $var reg 1 E B $end
                $var reg 1 G Y $end
              $upscope $end
            $upscope $end
            $scope module or_22 $end
              $var reg 1 F A $end
              $var reg 1 G B $end
              $var reg 1 4 Y $end
            $upscope $end
          $upscope $end
          $scope module full_adder3 $end
            $var reg 1 H A $end
            $var reg 1 I B $end
            $var reg 1 4 CIN $end
            $var reg 1 - SUM $end
            $var reg 1 5 COUT $end
            $var reg 1 J SUM_1 $end
            $var reg 1 K COUT_1 $end
            $var reg 1 L COUT_2 $end
            $scope module half_adder6 $end
              $var reg 1 H A $end
              $var reg 1 I B $end
              $var reg 1 J SUM $end
              $var reg 1 K CARRY $end
              $scope module xor_27 $end
                $var reg 1 H A $end
                $var reg 1 I B $end
                $var reg 1 J Y $end
              $upscope $end
              $scope module and_26 $end
                $var reg 1 H A $end
                $var reg 1 I B $end
                $var reg 1 K Y $end
              $upscope $end
            $upscope $end
            $scope module half_adder7 $end
              $var reg 1 4 A $end
              $var reg 1 J B $end
              $var reg 1 - SUM $end
              $var reg 1 L CARRY $end
              $scope module xor_28 $end
                $var reg 1 4 A $end
                $var reg 1 J B $end
                $var reg 1 - Y $end
              $upscope $end
              $scope module and_27 $end
                $var reg 1 4 A $end
                $var reg 1 J B $end
                $var reg 1 L Y $end
              $upscope $end
            $upscope $end
            $scope module or_23 $end
              $var reg 1 K A $end
              $var reg 1 L B $end
              $var reg 1 5 Y $end
            $upscope $end
          $upscope $end
          $scope module full_adder4 $end
            $var reg 1 M A $end
            $var reg 1 N B $end
            $var reg 1 5 CIN $end
            $var reg 1 . SUM $end
            $var reg 1 6 COUT $end
            $var reg 1 O SUM_1 $end
            $var reg 1 P COUT_1 $end
            $var reg 1 Q COUT_2 $end
            $scope module half_adder8 $end
              $var reg 1 M A $end
              $var reg 1 N B $end
              $var reg 1 O SUM $end
              $var reg 1 P CARRY $end
              $scope module xor_29 $end
                $var reg 1 M A $end
                $var reg 1 N B $end
                $var reg 1 O Y $end
              $upscope $end
              $scope module and_28 $end
                $var reg 1 M A $end
                $var reg 1 N B $end
                $var reg 1 P Y $end
              $upscope $end
            $upscope $end
            $scope module half_adder9 $end
              $var reg 1 5 A $end
              $var reg 1 O B $end
              $var reg 1 . SUM $end
              $var reg 1 Q CARRY $end
              $scope module xor_210 $end
                $var reg 1 5 A $end
                $var reg 1 O B $end
                $var reg 1 . Y $end
              $upscope $end
              $scope module and_29 $end
                $var reg 1 5 A $end
                $var reg 1 O B $end
                $var reg 1 Q Y $end
              $upscope $end
            $upscope $end
            $scope module or_24 $end
              $var reg 1 P A $end
              $var reg 1 Q B $end
              $var reg 1 6 Y $end
            $upscope $end
          $upscope $end
          $scope module full_adder5 $end
            $var reg 1 R A $end
            $var reg 1 S B $end
            $var reg 1 6 CIN $end
            $var reg 1 / SUM $end
            $var reg 1 7 COUT $end
            $var reg 1 T SUM_1 $end
            $var reg 1 U COUT_1 $end
            $var reg 1 V COUT_2 $end
            $scope module half_adder10 $end
              $var reg 1 R A $end
              $var reg 1 S B $end
              $var reg 1 T SUM $end
              $var reg 1 U CARRY $end
              $scope module xor_211 $end
                $var reg 1 R A $end
                $var reg 1 S B $end
                $var reg 1 T Y $end
              $upscope $end
              $scope module and_210 $end
                $var reg 1 R A $end
                $var reg 1 S B $end
                $var reg 1 U Y $end
              $upscope $end
            $upscope $end
            $scope module half_adder11 $end
              $var reg 1 6 A $end
              $var reg 1 T B $end
              $var reg 1 / SUM $end
              $var reg 1 V CARRY $end
              $scope module xor_212 $end
                $var reg 1 6 A $end
                $var reg 1 T B $end
                $var reg 1 / Y $end
              $upscope $end
              $scope module and_211 $end
                $var reg 1 6 A $end
                $var reg 1 T B $end
                $var reg 1 V Y $end
              $upscope $end
            $upscope $end
            $scope module or_25 $end
              $var reg 1 U A $end
              $var reg 1 V B $end
              $var reg 1 7 Y $end
            $upscope $end
          $upscope $end
          $scope module full_adder6 $end
            $var reg 1 W A $end
            $var reg 1 X B $end
            $var reg 1 7 CIN $end
            $var reg 1 0 SUM $end
            $var reg 1 8 COUT $end
            $var reg 1 Y SUM_1 $end
            $var reg 1 Z COUT_1 $end
            $var reg 1 [ COUT_2 $end
            $scope module half_adder12 $end
              $var reg 1 W A $end
              $var reg 1 X B $end
              $var reg 1 Y SUM $end
              $var reg 1 Z CARRY $end
              $scope module xor_213 $end
                $var reg 1 W A $end
                $var reg 1 X B $end
                $var reg 1 Y Y $end
              $upscope $end
              $scope module and_212 $end
                $var reg 1 W A $end
                $var reg 1 X B $end
                $var reg 1 Z Y $end
              $upscope $end
            $upscope $end
            $scope module half_adder13 $end
              $var reg 1 7 A $end
              $var reg 1 Y B $end
              $var reg 1 0 SUM $end
              $var reg 1 [ CARRY $end
              $scope module xor_214 $end
                $var reg 1 7 A $end
                $var reg 1 Y B $end
                $var reg 1 0 Y $end
              $upscope $end
              $scope module and_213 $end
                $var reg 1 7 A $end
                $var reg 1 Y B $end
                $var reg 1 [ Y $end
              $upscope $end
            $upscope $end
            $scope module or_26 $end
              $var reg 1 Z A $end
              $var reg 1 [ B $end
              $var reg 1 8 Y $end
            $upscope $end
          $upscope $end
          $scope module full_adder7 $end
            $var reg 1 \ A $end
            $var reg 1 ] B $end
            $var reg 1 8 CIN $end
            $var reg 1 1 SUM $end
            $var reg 1 ^ COUT $end
            $var reg 1 _ SUM_1 $end
            $var reg 1 ` COUT_1 $end
            $var reg 1 a COUT_2 $end
            $scope module half_adder14 $end
              $var reg 1 \ A $end
              $var reg 1 ] B $end
              $var reg 1 _ SUM $end
              $var reg 1 ` CARRY $end
              $scope module xor_215 $end
                $var reg 1 \ A $end
                $var reg 1 ] B $end
                $var reg 1 _ Y $end
              $upscope $end
              $scope module and_214 $end
                $var reg 1 \ A $end
                $var reg 1 ] B $end
                $var reg 1 ` Y $end
              $upscope $end
            $upscope $end
            $scope module half_adder15 $end
              $var reg 1 8 A $end
              $var reg 1 _ B $end
              $var reg 1 1 SUM $end
              $var reg 1 a CARRY $end
              $scope module xor_216 $end
                $var reg 1 8 A $end
                $var reg 1 _ B $end
                $var reg 1 1 Y $end
              $upscope $end
              $scope module and_215 $end
                $var reg 1 8 A $end
                $var reg 1 _ B $end
                $var reg 1 a Y $end
              $upscope $end
            $upscope $end
            $scope module or_27 $end
              $var reg 1 ` A $end
              $var reg 1 a B $end
              $var reg 1 ^ Y $end
            $upscope $end
          $upscope $end
          $scope module merge_81 $end
            $var reg 1 * A $end
            $var reg 1 + B $end
            $var reg 1 , C $end
            $var reg 1 - D $end
            $var reg 1 . E $end
            $var reg 1 / F $end
            $var reg 1 0 G $end
            $var reg 1 1 H $end
            $var reg 8 % Y $end
          $upscope $end
        $upscope $end
        $scope module merge_80 $end
          $var reg 1 ' A $end
          $var reg 1 ' B $end
          $var reg 1 ' C $end
          $var reg 1 ' D $end
          $var reg 1 ' E $end
          $var reg 1 ' F $end
          $var reg 1 ' G $end
          $var reg 1 ' H $end
          $var reg 8 ) Y $end
        $upscope $end
      $upscope $end
      $scope module and_216 $end
        $var reg 8 ! A $end
        $var reg 8 " B $end
        $var reg 8 & Y $end
      $upscope $end
      $scope module mux_3_80 $end
        $var reg 8 % A $end
        $var reg 8 & B $end
        $var reg 8 " C $end
        $var reg 2 b SEL $end
        $var reg 8 $ Y $end
        $var reg 8 c MUX $end
        $scope module mux_2_80 $end
          $var reg 8 % A $end
          $var reg 8 & B $end
          $var reg 1 d SEL $end
          $var reg 8 c Y $end
          $scope module Y_bits $end
            $var reg 1 e Y_bits(0) $end
            $var reg 1 f Y_bits(1) $end
            $var reg 1 g Y_bits(2) $end
            $var reg 1 h Y_bits(3) $end
            $var reg 1 i Y_bits(4) $end
            $var reg 1 j Y_bits(5) $end
            $var reg 1 k Y_bits(6) $end
            $var reg 1 l Y_bits(7) $end
          $upscope $end
          $scope module mux_2_10 $end
            $var reg 1 m A $end
            $var reg 1 n B $end
            $var reg 1 d SEL $end
            $var reg 1 e Y $end
            $var reg 1 o notSEL $end
            $var reg 1 p AND_1 $end
            $var reg 1 q AND_2 $end
            $scope module not_10 $end
              $var reg 1 d A $end
              $var reg 1 o Y $end
            $upscope $end
            $scope module and_217 $end
              $var reg 1 m A $end
              $var reg 1 o B $end
              $var reg 1 p Y $end
            $upscope $end
            $scope module and_218 $end
              $var reg 1 d A $end
              $var reg 1 n B $end
              $var reg 1 q Y $end
            $upscope $end
            $scope module or_28 $end
              $var reg 1 p A $end
              $var reg 1 q B $end
              $var reg 1 e Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_11 $end
            $var reg 1 r A $end
            $var reg 1 s B $end
            $var reg 1 d SEL $end
            $var reg 1 f Y $end
            $var reg 1 t notSEL $end
            $var reg 1 u AND_1 $end
            $var reg 1 v AND_2 $end
            $scope module not_11 $end
              $var reg 1 d A $end
              $var reg 1 t Y $end
            $upscope $end
            $scope module and_219 $end
              $var reg 1 r A $end
              $var reg 1 t B $end
              $var reg 1 u Y $end
            $upscope $end
            $scope module and_220 $end
              $var reg 1 d A $end
              $var reg 1 s B $end
              $var reg 1 v Y $end
            $upscope $end
            $scope module or_29 $end
              $var reg 1 u A $end
              $var reg 1 v B $end
              $var reg 1 f Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_12 $end
            $var reg 1 w A $end
            $var reg 1 x B $end
            $var reg 1 d SEL $end
            $var reg 1 g Y $end
            $var reg 1 y notSEL $end
            $var reg 1 z AND_1 $end
            $var reg 1 { AND_2 $end
            $scope module not_12 $end
              $var reg 1 d A $end
              $var reg 1 y Y $end
            $upscope $end
            $scope module and_221 $end
              $var reg 1 w A $end
              $var reg 1 y B $end
              $var reg 1 z Y $end
            $upscope $end
            $scope module and_222 $end
              $var reg 1 d A $end
              $var reg 1 x B $end
              $var reg 1 { Y $end
            $upscope $end
            $scope module or_210 $end
              $var reg 1 z A $end
              $var reg 1 { B $end
              $var reg 1 g Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_13 $end
            $var reg 1 | A $end
            $var reg 1 } B $end
            $var reg 1 d SEL $end
            $var reg 1 h Y $end
            $var reg 1 ~ notSEL $end
            $var reg 1 "! AND_1 $end
            $var reg 1 "" AND_2 $end
            $scope module not_13 $end
              $var reg 1 d A $end
              $var reg 1 ~ Y $end
            $upscope $end
            $scope module and_223 $end
              $var reg 1 | A $end
              $var reg 1 ~ B $end
              $var reg 1 "! Y $end
            $upscope $end
            $scope module and_224 $end
              $var reg 1 d A $end
              $var reg 1 } B $end
              $var reg 1 "" Y $end
            $upscope $end
            $scope module or_211 $end
              $var reg 1 "! A $end
              $var reg 1 "" B $end
              $var reg 1 h Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_14 $end
            $var reg 1 "# A $end
            $var reg 1 "$ B $end
            $var reg 1 d SEL $end
            $var reg 1 i Y $end
            $var reg 1 "% notSEL $end
            $var reg 1 "& AND_1 $end
            $var reg 1 "' AND_2 $end
            $scope module not_14 $end
              $var reg 1 d A $end
              $var reg 1 "% Y $end
            $upscope $end
            $scope module and_225 $end
              $var reg 1 "# A $end
              $var reg 1 "% B $end
              $var reg 1 "& Y $end
            $upscope $end
            $scope module and_226 $end
              $var reg 1 d A $end
              $var reg 1 "$ B $end
              $var reg 1 "' Y $end
            $upscope $end
            $scope module or_212 $end
              $var reg 1 "& A $end
              $var reg 1 "' B $end
              $var reg 1 i Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_15 $end
            $var reg 1 "( A $end
            $var reg 1 ") B $end
            $var reg 1 d SEL $end
            $var reg 1 j Y $end
            $var reg 1 "* notSEL $end
            $var reg 1 "+ AND_1 $end
            $var reg 1 ", AND_2 $end
            $scope module not_15 $end
              $var reg 1 d A $end
              $var reg 1 "* Y $end
            $upscope $end
            $scope module and_227 $end
              $var reg 1 "( A $end
              $var reg 1 "* B $end
              $var reg 1 "+ Y $end
            $upscope $end
            $scope module and_228 $end
              $var reg 1 d A $end
              $var reg 1 ") B $end
              $var reg 1 ", Y $end
            $upscope $end
            $scope module or_213 $end
              $var reg 1 "+ A $end
              $var reg 1 ", B $end
              $var reg 1 j Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_16 $end
            $var reg 1 "- A $end
            $var reg 1 ". B $end
            $var reg 1 d SEL $end
            $var reg 1 k Y $end
            $var reg 1 "/ notSEL $end
            $var reg 1 "0 AND_1 $end
            $var reg 1 "1 AND_2 $end
            $scope module not_16 $end
              $var reg 1 d A $end
              $var reg 1 "/ Y $end
            $upscope $end
            $scope module and_229 $end
              $var reg 1 "- A $end
              $var reg 1 "/ B $end
              $var reg 1 "0 Y $end
            $upscope $end
            $scope module and_230 $end
              $var reg 1 d A $end
              $var reg 1 ". B $end
              $var reg 1 "1 Y $end
            $upscope $end
            $scope module or_214 $end
              $var reg 1 "0 A $end
              $var reg 1 "1 B $end
              $var reg 1 k Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_17 $end
            $var reg 1 "2 A $end
            $var reg 1 "3 B $end
            $var reg 1 d SEL $end
            $var reg 1 l Y $end
            $var reg 1 "4 notSEL $end
            $var reg 1 "5 AND_1 $end
            $var reg 1 "6 AND_2 $end
            $scope module not_17 $end
              $var reg 1 d A $end
              $var reg 1 "4 Y $end
            $upscope $end
            $scope module and_231 $end
              $var reg 1 "2 A $end
              $var reg 1 "4 B $end
              $var reg 1 "5 Y $end
            $upscope $end
            $scope module and_232 $end
              $var reg 1 d A $end
              $var reg 1 "3 B $end
              $var reg 1 "6 Y $end
            $upscope $end
            $scope module or_215 $end
              $var reg 1 "5 A $end
              $var reg 1 "6 B $end
              $var reg 1 l Y $end
            $upscope $end
          $upscope $end
          $scope module merge_82 $end
            $var reg 1 e A $end
            $var reg 1 f B $end
            $var reg 1 g C $end
            $var reg 1 h D $end
            $var reg 1 i E $end
            $var reg 1 j F $end
            $var reg 1 k G $end
            $var reg 1 l H $end
            $var reg 8 c Y $end
          $upscope $end
        $upscope $end
        $scope module mux_2_81 $end
          $var reg 8 c A $end
          $var reg 8 " B $end
          $var reg 1 "7 SEL $end
          $var reg 8 $ Y $end
          $scope module Y_bits $end
            $var reg 1 "8 Y_bits(0) $end
            $var reg 1 "9 Y_bits(1) $end
            $var reg 1 ": Y_bits(2) $end
            $var reg 1 "; Y_bits(3) $end
            $var reg 1 "< Y_bits(4) $end
            $var reg 1 "= Y_bits(5) $end
            $var reg 1 "> Y_bits(6) $end
            $var reg 1 "? Y_bits(7) $end
          $upscope $end
          $scope module mux_2_18 $end
            $var reg 1 "@ A $end
            $var reg 1 "A B $end
            $var reg 1 "7 SEL $end
            $var reg 1 "8 Y $end
            $var reg 1 "B notSEL $end
            $var reg 1 "C AND_1 $end
            $var reg 1 "D AND_2 $end
            $scope module not_18 $end
              $var reg 1 "7 A $end
              $var reg 1 "B Y $end
            $upscope $end
            $scope module and_233 $end
              $var reg 1 "@ A $end
              $var reg 1 "B B $end
              $var reg 1 "C Y $end
            $upscope $end
            $scope module and_234 $end
              $var reg 1 "7 A $end
              $var reg 1 "A B $end
              $var reg 1 "D Y $end
            $upscope $end
            $scope module or_216 $end
              $var reg 1 "C A $end
              $var reg 1 "D B $end
              $var reg 1 "8 Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_19 $end
            $var reg 1 "E A $end
            $var reg 1 "F B $end
            $var reg 1 "7 SEL $end
            $var reg 1 "9 Y $end
            $var reg 1 "G notSEL $end
            $var reg 1 "H AND_1 $end
            $var reg 1 "I AND_2 $end
            $scope module not_19 $end
              $var reg 1 "7 A $end
              $var reg 1 "G Y $end
            $upscope $end
            $scope module and_235 $end
              $var reg 1 "E A $end
              $var reg 1 "G B $end
              $var reg 1 "H Y $end
            $upscope $end
            $scope module and_236 $end
              $var reg 1 "7 A $end
              $var reg 1 "F B $end
              $var reg 1 "I Y $end
            $upscope $end
            $scope module or_217 $end
              $var reg 1 "H A $end
              $var reg 1 "I B $end
              $var reg 1 "9 Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_110 $end
            $var reg 1 "J A $end
            $var reg 1 "K B $end
            $var reg 1 "7 SEL $end
            $var reg 1 ": Y $end
            $var reg 1 "L notSEL $end
            $var reg 1 "M AND_1 $end
            $var reg 1 "N AND_2 $end
            $scope module not_110 $end
              $var reg 1 "7 A $end
              $var reg 1 "L Y $end
            $upscope $end
            $scope module and_237 $end
              $var reg 1 "J A $end
              $var reg 1 "L B $end
              $var reg 1 "M Y $end
            $upscope $end
            $scope module and_238 $end
              $var reg 1 "7 A $end
              $var reg 1 "K B $end
              $var reg 1 "N Y $end
            $upscope $end
            $scope module or_218 $end
              $var reg 1 "M A $end
              $var reg 1 "N B $end
              $var reg 1 ": Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_111 $end
            $var reg 1 "O A $end
            $var reg 1 "P B $end
            $var reg 1 "7 SEL $end
            $var reg 1 "; Y $end
            $var reg 1 "Q notSEL $end
            $var reg 1 "R AND_1 $end
            $var reg 1 "S AND_2 $end
            $scope module not_111 $end
              $var reg 1 "7 A $end
              $var reg 1 "Q Y $end
            $upscope $end
            $scope module and_239 $end
              $var reg 1 "O A $end
              $var reg 1 "Q B $end
              $var reg 1 "R Y $end
            $upscope $end
            $scope module and_240 $end
              $var reg 1 "7 A $end
              $var reg 1 "P B $end
              $var reg 1 "S Y $end
            $upscope $end
            $scope module or_219 $end
              $var reg 1 "R A $end
              $var reg 1 "S B $end
              $var reg 1 "; Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_112 $end
            $var reg 1 "T A $end
            $var reg 1 "U B $end
            $var reg 1 "7 SEL $end
            $var reg 1 "< Y $end
            $var reg 1 "V notSEL $end
            $var reg 1 "W AND_1 $end
            $var reg 1 "X AND_2 $end
            $scope module not_112 $end
              $var reg 1 "7 A $end
              $var reg 1 "V Y $end
            $upscope $end
            $scope module and_241 $end
              $var reg 1 "T A $end
              $var reg 1 "V B $end
              $var reg 1 "W Y $end
            $upscope $end
            $scope module and_242 $end
              $var reg 1 "7 A $end
              $var reg 1 "U B $end
              $var reg 1 "X Y $end
            $upscope $end
            $scope module or_220 $end
              $var reg 1 "W A $end
              $var reg 1 "X B $end
              $var reg 1 "< Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_113 $end
            $var reg 1 "Y A $end
            $var reg 1 "Z B $end
            $var reg 1 "7 SEL $end
            $var reg 1 "= Y $end
            $var reg 1 "[ notSEL $end
            $var reg 1 "\ AND_1 $end
            $var reg 1 "] AND_2 $end
            $scope module not_113 $end
              $var reg 1 "7 A $end
              $var reg 1 "[ Y $end
            $upscope $end
            $scope module and_243 $end
              $var reg 1 "Y A $end
              $var reg 1 "[ B $end
              $var reg 1 "\ Y $end
            $upscope $end
            $scope module and_244 $end
              $var reg 1 "7 A $end
              $var reg 1 "Z B $end
              $var reg 1 "] Y $end
            $upscope $end
            $scope module or_221 $end
              $var reg 1 "\ A $end
              $var reg 1 "] B $end
              $var reg 1 "= Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_114 $end
            $var reg 1 "^ A $end
            $var reg 1 "_ B $end
            $var reg 1 "7 SEL $end
            $var reg 1 "> Y $end
            $var reg 1 "` notSEL $end
            $var reg 1 "a AND_1 $end
            $var reg 1 "b AND_2 $end
            $scope module not_114 $end
              $var reg 1 "7 A $end
              $var reg 1 "` Y $end
            $upscope $end
            $scope module and_245 $end
              $var reg 1 "^ A $end
              $var reg 1 "` B $end
              $var reg 1 "a Y $end
            $upscope $end
            $scope module and_246 $end
              $var reg 1 "7 A $end
              $var reg 1 "_ B $end
              $var reg 1 "b Y $end
            $upscope $end
            $scope module or_222 $end
              $var reg 1 "a A $end
              $var reg 1 "b B $end
              $var reg 1 "> Y $end
            $upscope $end
          $upscope $end
          $scope module mux_2_115 $end
            $var reg 1 "c A $end
            $var reg 1 "d B $end
            $var reg 1 "7 SEL $end
            $var reg 1 "? Y $end
            $var reg 1 "e notSEL $end
            $var reg 1 "f AND_1 $end
            $var reg 1 "g AND_2 $end
            $scope module not_115 $end
              $var reg 1 "7 A $end
              $var reg 1 "e Y $end
            $upscope $end
            $scope module and_247 $end
              $var reg 1 "c A $end
              $var reg 1 "e B $end
              $var reg 1 "f Y $end
            $upscope $end
            $scope module and_248 $end
              $var reg 1 "7 A $end
              $var reg 1 "d B $end
              $var reg 1 "g Y $end
            $upscope $end
            $scope module or_223 $end
              $var reg 1 "f A $end
              $var reg 1 "g B $end
              $var reg 1 "? Y $end
            $upscope $end
          $upscope $end
          $scope module merge_83 $end
            $var reg 1 "8 A $end
            $var reg 1 "9 B $end
            $var reg 1 ": C $end
            $var reg 1 "; D $end
            $var reg 1 "< E $end
            $var reg 1 "= F $end
            $var reg 1 "> G $end
            $var reg 1 "? H $end
            $var reg 8 $ Y $end
          $upscope $end
        $upscope $end
      $upscope $end
    $upscope $end
  $upscope $end

$enddefinitions $end

$dumpvars
b00000000 !
b00000000 "
b000 #
b00000000 $
b00000000 %
b00000000 &
0'
b00000000 (
b00000000 )
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
b00 b
b00000000 c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0"!
0""
0"#
0"$
0"%
0"&
0"'
0"(
0")
0"*
0"+
0",
0"-
0".
0"/
0"0
0"1
0"2
0"3
0"4
0"5
0"6
0"7
0"8
0"9
0":
0";
0"<
0"=
0">
0"?
0"@
0"A
0"B
0"C
0"D
0"E
0"F
0"G
0"H
0"I
0"J
0"K
0"L
0"M
0"N
0"O
0"P
0"Q
0"R
0"S
0"T
0"U
0"V
0"W
0"X
0"Y
0"Z
0"[
0"\
0"]
0"^
0"_
0"`
0"a
0"b
0"c
0"d
0"e
0"f
0"g
$end
1"e
1"`
1"[
1"V
1"Q
1"L
1"G
1"B
1"4
1"/
1"*
1"%
1~
1y
1t
1o
#1000
b00001111 !
b00000011 "
b00000011 (
b00000011 &
1"A
1"F
19
1>
1C
1H
1J
1E
1@
1;
1n
1s
1:
1?
1A
0@
1<
0;
1*
1+
1,
1-
b00001111 %
0*
12
0+
13
1G
0,
b00001100 %
1+
1m
1r
1w
1|
1"!
1z
1u
1p
b00001010 %
0r
0m
14
1L
0-
0p
0u
1r
0w
1e
1f
1g
1h
b00001111 c
0z
1u
0f
0e
b00000010 %
15
1.
0|
b00001100 c
1f
0g
1"@
1"E
1"J
1"O
1"R
1"M
1"H
1"C
b00001010 c
0"E
0"@
0"!
b00010010 %
1"#
0h
0"C
0"H
1"E
0"J
1"8
1"9
1":
1";
b00001111 $
0"M
1"H
0"9
0"8
b00000010 c
1"&
1i
0"O
b00001100 $
1"9
0":
b00001010 $
0"R
b00010010 c
1"T
0";
b00000010 $
1"W
1"<
b00010010 $
#2000
b11111111 !
b00000001 "
0"F
b00000001 &
b00000001 (
1\
1W
1R
1M
1O
1T
1Y
1_
0?
0s
1@
0A
11
10
1/
1Q
0.
b11100010 %
16
03
1B
0+
b11100000 %
13
1,
0G
1V
0/
1"2
1"-
1"(
0"#
0"&
1"+
1"0
1"5
b11000100 %
17
04
1G
0,
0r
0u
b11000000 %
14
1-
0L
1[
00
0"(
1w
1l
1k
1j
0i
b11100010 c
1z
0"+
b10001000 %
18
05
1L
0-
0w
0f
b11100000 c
0z
b10000000 %
15
1.
0Q
1a
01
0"-
1|
0j
1g
1"c
1"^
1"Y
0"T
0"W
1"\
1"a
1"f
b11000100 c
1"!
0"0
b00010000 %
1^
06
1Q
0.
0|
0g
0"E
0"H
b11000000 c
0"!
b00000000 %
16
1/
0V
0"2
1"#
0k
1h
0"Y
1"J
1"?
1">
1"=
0"<
b11100010 $
1"M
0"\
b10001000 c
1"&
0"5
07
b00100000 %
1V
0/
0"#
0h
0"J
0"9
b11100000 $
0"M
b10000000 c
0"&
b00000000 %
17
1"(
10
0[
0l
1i
0"^
1"O
0"=
1":
b11000100 $
1"R
0"a
b00010000 c
08
b01000000 %
1"+
1[
00
0"(
0i
0"O
0":
b11000000 $
0"R
b00000000 c
0"+
b00000000 %
18
1j
1"-
11
0a
0"c
1"T
0">
1";
b10001000 $
1"W
0"f
0^
b10000000 %
1"0
b00100000 c
1a
01
0"-
0j
0"T
0";
b10000000 $
0"W
b00000000 c
0"0
b00000000 %
1^
1"Y
1k
1"2
0"?
1"<
b00010000 $
1"5
b01000000 c
1"\
0"2
0k
0"Y
0"<
b00000000 $
0"\
b00000000 c
0"5
1"=
1"^
1l
b10000000 c
1"a
b00100000 $
0l
0"^
0"=
b00000000 $
0"a
b00000000 c
1">
1"c
1"f
b01000000 $
0"c
0">
b00000000 $
0"f
1"?
b10000000 $
0"?
b00000000 $
#3000
b00001010 !
b00010100 "
b001 #
1'
b00010100 (
b00000000 &
0"A
1"K
1"U
09
0C
0M
0R
0W
0\
0_
0Y
0T
0O
0E
1;
0<
0n
0:
1D
1N
1*
b11111111 )
b11101011 (
b00000001 %
1O
1E
0;
02
1=
0*
1,
0G
1.
0Q
1/
0V
10
0[
11
0a
0^
b11110100 %
08
07
06
04
12
1+
0B
1*
0=
1G
0,
1Q
0.
1m
1]
1X
1S
0N
1I
0D
1?
1:
1;
1A
0@
0E
1K
0J
0O
1T
1Y
1_
1p
b11100011 %
16
14
02
03
1B
0+
1-
0L
0/
00
01
0m
1w
1"#
1"(
1"-
1"2
1"5
1"0
1"+
1"&
1z
0p
b00001001 %
13
0G
0B
1V
0"#
0w
1r
1m
1e
11
10
1.
0Q
1=
0*
b11011000 %
12
06
b00000001 c
1p
1u
0z
0"&
17
04
1,
0r
1|
0"(
0"-
0"2
0e
1g
1i
1j
1k
1l
b11110100 c
0"5
0"0
0"+
1"!
0u
b11011100 %
0-
1[
00
0i
0g
1f
1e
1"@
0V
1/
1+
1"2
1"-
1"#
0m
0p
1"&
1"0
1"5
b10110110 %
07
1"C
b11100011 c
18
1w
0f
1h
0j
0k
0l
0"@
1"J
1"T
1"Y
1"^
1"c
1"f
1"a
1"\
1"W
1"M
0"C
b00001001 c
1z
1a
01
0"T
0"J
1"E
1"@
1"8
10
0[
0"-
1"(
0|
1r
1l
1k
1i
0e
b11011000 c
1u
0"!
1"+
0"0
08
b01110110 %
b00000001 $
1"C
1"H
0"M
0"W
1^
1g
0"E
1"O
0"Y
0"^
0"c
0"8
1":
1"<
1"=
1">
1"?
b11110100 $
0"f
0"a
0"\
1"R
0"H
b11011100 c
0"<
0":
1"9
1"8
1"-
0"2
11
0a
0k
1j
0h
1f
1"c
1"^
1"T
0"@
0"C
1"W
1"a
1"f
b10110110 c
0^
b11110110 %
0"5
1"0
b11100011 $
1"J
0"9
1";
0"=
0">
0"?
b00001001 $
1"M
1k
0l
1"2
0"^
1"Y
0"O
1"E
1"?
1">
1"<
0"8
b11011000 $
1"H
0"R
1"\
0"a
1"5
b01110110 c
1":
b11011100 $
1"^
0"c
1l
0">
1"=
0";
1"9
b10110110 $
b11110110 c
0"f
1"a
1">
0"?
1"c
1"f
b01110110 $
1"?
b11110110 $
#4000
b00010100 !
b00001010 "
b11110101 (
0"U
1"P
0"K
1"F
1M
0H
1C
0>
1@
0A
1E
1J
0K
1O
0?
1D
0I
1N
1P
0O
0J
1F
0E
0@
1Q
0.
05
1-
0,
1G
03
0+
1B
13
b11101000 %
0G
14
0Q
16
0B
1+
0-
b11100010 %
03
0/
1V
1-
0r
0w
1|
0"#
1,
b11001110 %
0"&
1"!
0z
0u
17
0,
0|
1r
1u
0"!
b11001010 %
1[
00
0f
0g
1h
0i
1w
1|
0"(
0"+
1"!
1z
b11101000 c
b10001010 %
18
0w
0h
1f
b11100010 c
0z
1a
01
0"-
0"E
0"J
1"O
0"T
1g
1h
0j
b11001110 c
0"W
1"R
0"M
0"H
0"0
b00001010 %
1^
0g
0"O
1"E
1"H
0"R
b11001010 c
0"2
0k
0"9
0":
1";
0"<
1"J
1"O
0"Y
0"\
1"R
1"M
b11101000 $
b10001010 c
0"5
0"J
0";
1"9
b11100010 $
0"M
0l
0"^
1":
1";
0"=
b11001110 $
0"a
b00001010 c
0":
b11001010 $
0"c
0">
b10001010 $
0"f
0"?
b00001010 $
#5000
b00001111 !
b00000011 "
b010 #
b01 b
0'
b00000011 &
1"A
0"P
b11111100 (
19
1>
1H
0M
1O
0P
1J
1@
1<
0;
1I
0:
1s
1n
1*
0=
b00000000 )
1d
1q
1v
0o
0t
0y
0~
0"%
0"*
0"/
0"4
b00000011 (
b00001011 %
1;
0<
1K
0J
0*
0+
1B
0-
1L
06
1.
b00010000 %
0V
1/
15
13
0L
1-
02
1*
1m
1:
1?
0D
0I
0N
0S
0X
0]
0"!
0u
1e
b00001011 c
0h
0_
0Y
0T
0O
1J
0K
1E
0F
1A
0@
1<
0;
b00111001 %
0B
1+
1,
0.
1Q
07
1"#
0|
0r
0m
0[
16
b00101111 %
1m
1|
1"(
0*
12
0+
04
1G
0,
05
0-
1L
0Q
1.
0/
11
0a
b00000011 c
1"@
1"C
0"O
0^
b10010000 %
06
15
0.
14
0L
1-
1+
0"#
1w
1r
1/
08
01
b10101010 %
05
0-
1L
1.
0/
0m
0r
0w
0|
1"#
0"(
1"2
0"R
1"8
b00001011 $
0";
b00010010 %
15
0.
1"(
0"#
1|
1r
b00000010 %
1.
0|
1"#
0"(
0"2
b00000011 $
b00010010 %
0"#
1"#
#6000
b10101010 !
b01010101 "
b01010101 (
1"_
1"U
1"K
0"F
b00000000 &
1\
1R
0C
09
1;
0<
0E
1T
1_
0n
0s
1X
1N
1D
0?
1@
0A
1E
1O
1Y
0v
0q
11
1/
1,
0G
02
1*
b10110111 %
04
0e
0f
10
0.
1Q
1G
0,
03
1,
0G
b11100011 %
14
16
b00000000 c
0L
1-
1"2
1"(
1w
1m
b11101111 %
05
0"@
0"E
0/
1V
0-
1L
0w
0"#
1"-
04
0L
1-
15
b11000111 %
17
0"H
0"C
0Q
1.
1|
1w
b11011111 %
06
0"8
0"9
00
1[
0|
0"(
0.
1Q
05
0Q
1.
16
b10001111 %
18
b00000000 $
0V
1/
1"#
1|
b10111111 %
07
1a
01
0"#
0"-
0/
1V
06
0V
1/
17
b00011111 %
1^
0[
10
1"(
1"#
b01111111 %
08
0"(
0"2
00
1[
07
0[
10
18
b00111111 %
11
0a
1"-
1"(
0^
b11111111 %
0"-
1a
01
08
11
0a
b01111111 %
1^
1"2
1"-
0"2
0^
b11111111 %
1"2
#7000
b100 #
b10 b
1"7
0d
1"4
1"/
1"*
1"%
1~
1y
1t
1o
1"b
1"X
1"N
1"D
0"B
0"G
0"L
0"Q
0"V
0"[
0"`
0"e
1"8
1":
1"<
1">
1p
1u
1z
1"!
1"&
1"+
1"0
1"5
1l
1k
1j
1i
1h
1g
1f
1e
b01010101 $
b11111111 c
1"c
1"^
1"Y
1"T
1"O
1"J
1"E
1"@
#8000
b01111011 !
b00101101 "
b00101001 &
1"P
0"U
1"Z
0"_
b00101101 (
19
1M
1W
0\
0_
1Z
0Y
1P
0O
1<
0;
1I
0N
1S
0X
0"b
1"]
0"X
1"S
1")
1}
1n
1";
0"<
1"=
0">
1Y
0Z
1U
0T
1O
0P
1K
0J
0*
12
0.
16
00
18
01
b00101110 %
11
1B
0+
0-
15
06
1.
17
08
10
b00101101 $
b11110100 %
01
00
1[
0/
0.
1Q
13
0m
0"#
0"-
0"2
0"5
0"0
0"&
0p
1G
0,
16
b00000100 %
18
1"2
1"-
1"#
0|
0r
0u
0"!
1"&
1"0
1"5
11
0"#
0"(
0"-
0"2
1/
b00000000 %
14
0e
0i
0k
0l
b00101110 c
1-
0w
b10100000 %
0"5
0"0
0"+
0"&
1l
1k
1i
0h
0f
b11110100 c
0i
0j
0k
0l
1"(
1"2
0z
b10101000 %
0"@
0"T
0"^
0"c
1|
0g
1"5
1"+
b00000100 c
1"c
1"^
1"T
0"O
0"E
0"T
0"Y
0"^
0"c
1j
1l
b00000000 c
1"!
1h
0"J
b10100000 c
1"Y
1"c
b10101000 c
1"O
#9000
