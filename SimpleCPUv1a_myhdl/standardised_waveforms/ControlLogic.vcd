$date
   Sat May 10 18:47:46 2025 UTC
$end
$version
    MyHDL 0.11.51
$end
$timescale
    1ns
$end

  $scope module ControlLogicTest $end
    $var reg 1 ! clk $end
    $var reg 4 " A $end
    $var reg 3 # ACC_CTL $end
    $var reg 1 $ ACC_EN $end
    $var reg 1 % ADDR_SEL $end
    $var reg 1 & DATA_SEL $end
    $var reg 1 ' IR_EN $end
    $var reg 1 ( PC_EN $end
    $var reg 1 ) PC_LD $end
    $var reg 1 * RAM_EN $end
    $var reg 1 + RAM_WR $end
    $var reg 1 , ROM_EN $end
    $var reg 1 - Z $end
    $var reg 1 . rst $end
    $scope module control_logic0 $end
      $var reg 1 ! clk $end
      $var reg 1 . rst $end
      $var reg 4 " A $end
      $var reg 1 - Z $end
      $var reg 1 ' IR_EN $end
      $var reg 1 , ROM_EN $end
      $var reg 1 * RAM_EN $end
      $var reg 1 + RAM_WR $end
      $var reg 1 % ADDR_SEL $end
      $var reg 1 & DATA_SEL $end
      $var reg 1 ( PC_EN $end
      $var reg 1 ) PC_LD $end
      $var reg 1 $ ACC_EN $end
      $var reg 3 # ACC_CTL $end
      $var reg 3 / Q $end
      $var reg 16 0 Y $end
      $var reg 1 1 notZ $end
      $var reg 1 2 notPC_LD $end
      $var reg 1 3 OR_1 $end
      $var reg 1 4 OR_2 $end
      $var reg 1 5 OR_3 $end
      $var reg 1 6 AND_1 $end
      $var reg 1 7 AND_2 $end
      $var reg 1 8 AND_3 $end
      $var reg 1 9 AND_4 $end
      $var reg 1 : SUB $end
      $scope module ACC_CTL_bits $end
        $var reg 1 ; ACC_CTL_bits(0) $end
        $var reg 1 < ACC_CTL_bits(1) $end
        $var reg 1 = ACC_CTL_bits(2) $end
      $upscope $end
      $scope module ring_counter0 $end
        $var reg 1 ! clk $end
        $var reg 1 . rst $end
        $var reg 3 / Q $end
      $upscope $end
      $scope module decoder_1hot_4_160 $end
        $var reg 4 " A $end
        $var reg 16 0 Y $end
        $var reg 1 > notIN_1 $end
        $var reg 1 ? notIN_2 $end
        $var reg 1 @ notIN_3 $end
        $var reg 1 A notIN_4 $end
        $scope module Y_bits $end
          $var reg 1 B Y_bits(0) $end
          $var reg 1 C Y_bits(1) $end
          $var reg 1 D Y_bits(2) $end
          $var reg 1 E Y_bits(3) $end
          $var reg 1 F Y_bits(4) $end
          $var reg 1 G Y_bits(5) $end
          $var reg 1 H Y_bits(6) $end
          $var reg 1 I Y_bits(7) $end
          $var reg 1 J Y_bits(8) $end
          $var reg 1 K Y_bits(9) $end
          $var reg 1 L Y_bits(10) $end
          $var reg 1 M Y_bits(11) $end
          $var reg 1 N Y_bits(12) $end
          $var reg 1 O Y_bits(13) $end
          $var reg 1 P Y_bits(14) $end
          $var reg 1 Q Y_bits(15) $end
        $upscope $end
        $scope module not_10 $end
          $var reg 1 R A $end
          $var reg 1 > Y $end
        $upscope $end
        $scope module not_11 $end
          $var reg 1 S A $end
          $var reg 1 ? Y $end
        $upscope $end
        $scope module not_12 $end
          $var reg 1 T A $end
          $var reg 1 @ Y $end
        $upscope $end
        $scope module not_13 $end
          $var reg 1 U A $end
          $var reg 1 A Y $end
        $upscope $end
        $scope module and_40 $end
          $var reg 1 A A $end
          $var reg 1 @ B $end
          $var reg 1 ? C $end
          $var reg 1 > D $end
          $var reg 1 B Y $end
        $upscope $end
        $scope module and_41 $end
          $var reg 1 A A $end
          $var reg 1 @ B $end
          $var reg 1 ? C $end
          $var reg 1 V D $end
          $var reg 1 C Y $end
        $upscope $end
        $scope module and_42 $end
          $var reg 1 A A $end
          $var reg 1 @ B $end
          $var reg 1 W C $end
          $var reg 1 > D $end
          $var reg 1 D Y $end
        $upscope $end
        $scope module and_43 $end
          $var reg 1 A A $end
          $var reg 1 @ B $end
          $var reg 1 X C $end
          $var reg 1 Y D $end
          $var reg 1 E Y $end
        $upscope $end
        $scope module and_44 $end
          $var reg 1 A A $end
          $var reg 1 Z B $end
          $var reg 1 ? C $end
          $var reg 1 > D $end
          $var reg 1 F Y $end
        $upscope $end
        $scope module and_45 $end
          $var reg 1 A A $end
          $var reg 1 [ B $end
          $var reg 1 ? C $end
          $var reg 1 \ D $end
          $var reg 1 G Y $end
        $upscope $end
        $scope module and_46 $end
          $var reg 1 A A $end
          $var reg 1 ] B $end
          $var reg 1 ^ C $end
          $var reg 1 > D $end
          $var reg 1 H Y $end
        $upscope $end
        $scope module and_47 $end
          $var reg 1 A A $end
          $var reg 1 _ B $end
          $var reg 1 ` C $end
          $var reg 1 a D $end
          $var reg 1 I Y $end
        $upscope $end
        $scope module and_48 $end
          $var reg 1 b A $end
          $var reg 1 @ B $end
          $var reg 1 ? C $end
          $var reg 1 > D $end
          $var reg 1 J Y $end
        $upscope $end
        $scope module and_49 $end
          $var reg 1 c A $end
          $var reg 1 @ B $end
          $var reg 1 ? C $end
          $var reg 1 d D $end
          $var reg 1 K Y $end
        $upscope $end
        $scope module and_410 $end
          $var reg 1 e A $end
          $var reg 1 @ B $end
          $var reg 1 f C $end
          $var reg 1 > D $end
          $var reg 1 L Y $end
        $upscope $end
        $scope module and_411 $end
          $var reg 1 g A $end
          $var reg 1 @ B $end
          $var reg 1 h C $end
          $var reg 1 i D $end
          $var reg 1 M Y $end
        $upscope $end
        $scope module and_412 $end
          $var reg 1 j A $end
          $var reg 1 k B $end
          $var reg 1 ? C $end
          $var reg 1 > D $end
          $var reg 1 N Y $end
        $upscope $end
        $scope module and_413 $end
          $var reg 1 l A $end
          $var reg 1 m B $end
          $var reg 1 ? C $end
          $var reg 1 n D $end
          $var reg 1 O Y $end
        $upscope $end
        $scope module and_414 $end
          $var reg 1 o A $end
          $var reg 1 p B $end
          $var reg 1 q C $end
          $var reg 1 > D $end
          $var reg 1 P Y $end
        $upscope $end
        $scope module and_415 $end
          $var reg 1 r A $end
          $var reg 1 s B $end
          $var reg 1 t C $end
          $var reg 1 u D $end
          $var reg 1 Q Y $end
        $upscope $end
        $scope module merge_160 $end
          $var reg 1 B A $end
          $var reg 1 C B $end
          $var reg 1 D C $end
          $var reg 1 E D $end
          $var reg 1 F E $end
          $var reg 1 G F $end
          $var reg 1 H G $end
          $var reg 1 I H $end
          $var reg 1 J I $end
          $var reg 1 K J $end
          $var reg 1 L K $end
          $var reg 1 M L $end
          $var reg 1 N M $end
          $var reg 1 O N $end
          $var reg 1 P O $end
          $var reg 1 Q P $end
          $var reg 16 0 Y $end
        $upscope $end
      $upscope $end
      $scope module or_20 $end
        $var reg 1 v A $end
        $var reg 1 w B $end
        $var reg 1 : Y $end
      $upscope $end
      $scope module not_14 $end
        $var reg 1 - A $end
        $var reg 1 1 Y $end
      $upscope $end
      $scope module buf_10 $end
        $var reg 1 x A $end
        $var reg 1 ' Y $end
      $upscope $end
      $scope module buf_11 $end
        $var reg 1 y A $end
        $var reg 1 , Y $end
      $upscope $end
      $scope module or_21 $end
        $var reg 1 z A $end
        $var reg 1 { B $end
        $var reg 1 3 Y $end
      $upscope $end
      $scope module or_30 $end
        $var reg 1 | A $end
        $var reg 1 } B $end
        $var reg 1 : C $end
        $var reg 1 4 Y $end
      $upscope $end
      $scope module and_20 $end
        $var reg 1 ~ A $end
        $var reg 1 "! B $end
        $var reg 1 + Y $end
      $upscope $end
      $scope module or_22 $end
        $var reg 1 "" A $end
        $var reg 1 : B $end
        $var reg 1 & Y $end
      $upscope $end
      $scope module and_21 $end
        $var reg 1 "# A $end
        $var reg 1 - B $end
        $var reg 1 6 Y $end
      $upscope $end
      $scope module and_22 $end
        $var reg 1 "$ A $end
        $var reg 1 1 B $end
        $var reg 1 7 Y $end
      $upscope $end
      $scope module or_60 $end
        $var reg 1 "% A $end
        $var reg 1 "& B $end
        $var reg 1 "' C $end
        $var reg 1 "( D $end
        $var reg 1 ") E $end
        $var reg 1 : F $end
        $var reg 1 5 Y $end
      $upscope $end
      $scope module or_23 $end
        $var reg 1 "* A $end
        $var reg 1 "+ B $end
        $var reg 1 = Y $end
      $upscope $end
      $scope module buf_12 $end
        $var reg 1 ", A $end
        $var reg 1 < Y $end
      $upscope $end
      $scope module or_24 $end
        $var reg 1 "- A $end
        $var reg 1 ". B $end
        $var reg 1 ; Y $end
      $upscope $end
      $scope module and_23 $end
        $var reg 1 3 A $end
        $var reg 1 4 B $end
        $var reg 1 * Y $end
      $upscope $end
      $scope module and_24 $end
        $var reg 1 4 A $end
        $var reg 1 3 B $end
        $var reg 1 % Y $end
      $upscope $end
      $scope module or_31 $end
        $var reg 1 "/ A $end
        $var reg 1 6 B $end
        $var reg 1 7 C $end
        $var reg 1 ) Y $end
      $upscope $end
      $scope module and_25 $end
        $var reg 1 5 A $end
        $var reg 1 "0 B $end
        $var reg 1 $ Y $end
      $upscope $end
      $scope module not_15 $end
        $var reg 1 ) A $end
        $var reg 1 2 Y $end
      $upscope $end
      $scope module and_26 $end
        $var reg 1 ) A $end
        $var reg 1 "1 B $end
        $var reg 1 8 Y $end
      $upscope $end
      $scope module and_27 $end
        $var reg 1 2 A $end
        $var reg 1 "2 B $end
        $var reg 1 9 Y $end
      $upscope $end
      $scope module or_25 $end
        $var reg 1 8 A $end
        $var reg 1 9 B $end
        $var reg 1 ( Y $end
      $upscope $end
      $scope module merge_30 $end
        $var reg 1 ; A $end
        $var reg 1 < B $end
        $var reg 1 = C $end
        $var reg 3 # Y $end
      $upscope $end
    $upscope $end
    $scope module clock_driver0 $end
      $var reg 1 ! clk $end
    $upscope $end
  $upscope $end

$enddefinitions $end

$dumpvars
0!
b0000 "
b000 #
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
b000 /
b0000000000000000 0
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0"!
0""
0"#
0"$
0"%
0"&
0"'
0"(
0")
0"*
0"+
0",
0"-
0".
0"/
0"0
0"1
0"2
$end
1.
12
11
1A
1@
1?
1>
1B
b001 /
1x
1y
b0000000000000001 0
1"%
1"*
1,
1'
1=
15
b100 #
#500
1!
#1000
0!
0.
#1500
1!
b010 /
1"2
1z
0y
0x
0'
0,
13
19
1(
#2000
0!
#2500
1!
b100 /
0z
1{
1~
1"0
1"1
0"2
09
1$
0(
#3000
0!
#3500
1!
b001 /
0"1
0"0
0~
0{
1y
1x
1'
1,
03
0$
#4000
0!
#4500
1!
b010 /
0x
0y
1z
1"2
19
13
0,
0'
1(
#5000
0!
#5500
1!
b100 /
0"2
1"1
1"0
1~
1{
0z
1$
09
0(
#6000
0!
b0001 "
1R
1V
1Y
1\
1a
1d
1i
1n
1u
1C
0>
0B
b0000000000000011 0
1"&
b0000000000000010 0
0"%
0"*
0=
b000 #
#6500
1!
b001 /
1x
1y
0{
0~
0"0
0"1
0$
03
1,
1'
#7000
0!
#7500
1!
b010 /
1"2
1z
0y
0x
0'
0,
13
19
1(
#8000
0!
#8500
1!
b100 /
0z
1{
1~
1"0
1"1
0"2
09
1$
0(
#9000
0!
b0100 "
0u
1s
1p
0n
1m
1k
0i
0d
0a
1_
1]
0\
1[
1Z
0Y
0V
1T
0R
1>
0@
0C
b0000000000000000 0
1F
b0000000000010000 0
0"&
05
1|
1""
1")
1"+
1=
15
1&
14
0$
1%
1*
1$
b100 #
#9500
1!
b001 /
0"1
0"0
0~
0{
1y
1x
1'
1,
03
0$
0*
0%
#10000
0!
#10500
1!
b010 /
0x
0y
1z
1"2
19
13
0,
0'
1%
1*
1(
#11000
0!
#11500
1!
b100 /
0"2
1"1
1"0
1~
1{
0z
1$
09
0(
#12000
0!
b0101 "
1R
1V
1Y
1\
1a
1d
1i
1n
1u
1G
0>
0F
b0000000000110000 0
1"!
1}
b0000000000100000 0
0|
0""
0")
0"+
1+
0=
05
0&
0$
b000 #
#12500
1!
b001 /
1x
1y
0{
0~
0"0
0"1
0+
03
1,
1'
0*
0%
#13000
0!
#13500
1!
b010 /
1"2
1z
0y
0x
0'
0,
13
19
1(
1%
1*
#14000
0!
#14500
1!
b100 /
0z
1{
1~
1"0
1"1
0"2
09
1+
0(
#15000
0!
b1001 "
1-
01
0s
1r
0p
1o
0m
1l
0k
1j
1g
1e
1c
1b
0_
0]
0[
0Z
1U
0T
1@
0A
0G
b0000000000000000 0
1K
b0000001000000000 0
0"!
0}
04
0+
1"#
16
0*
0%
1)
18
02
1(
#15500
1!
b001 /
0"1
0"0
0~
0{
1y
1x
1'
1,
03
08
0(
#16000
0!
#16500
1!
b010 /
0x
0y
1z
1"2
13
0,
0'
#17000
0!
#17500
1!
b100 /
0"2
1"1
1"0
1~
1{
0z
18
1(
#18000
0!
0-
06
11
0)
08
12
0(
#18500
1!
b001 /
1x
1y
0{
0~
0"0
0"1
03
1,
1'
#19000
0!
#19500
1!
b010 /
1"2
1z
0y
0x
0'
0,
13
19
1(
#20000
0!
#20500
1!
b100 /
0z
1{
1~
1"0
1"1
0"2
09
0(
#21000
