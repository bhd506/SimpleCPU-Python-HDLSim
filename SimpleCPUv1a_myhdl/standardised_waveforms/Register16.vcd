$date
   Sat May 10 18:56:01 2025 UTC
$end
$version
    MyHDL 0.11.51
$end
$timescale
    1ns
$end

  $scope module RegisterTest $end
    $var reg 1 ! clk $end
    $var reg 1 " CE $end
    $var reg 16 # D $end
    $var reg 16 $ Q $end
    $var reg 1 % rst $end
    $scope module register_160 $end
      $var reg 1 ! clk $end
      $var reg 1 % rst $end
      $var reg 1 " CE $end
      $var reg 16 # D $end
      $var reg 16 $ Q $end
      $scope module Y_bits $end
        $var reg 1 & Y_bits(0) $end
        $var reg 1 ' Y_bits(1) $end
        $var reg 1 ( Y_bits(2) $end
        $var reg 1 ) Y_bits(3) $end
        $var reg 1 * Y_bits(4) $end
        $var reg 1 + Y_bits(5) $end
        $var reg 1 , Y_bits(6) $end
        $var reg 1 - Y_bits(7) $end
        $var reg 1 . Y_bits(8) $end
        $var reg 1 / Y_bits(9) $end
        $var reg 1 0 Y_bits(10) $end
        $var reg 1 1 Y_bits(11) $end
        $var reg 1 2 Y_bits(12) $end
        $var reg 1 3 Y_bits(13) $end
        $var reg 1 4 Y_bits(14) $end
        $var reg 1 5 Y_bits(15) $end
      $upscope $end
      $scope module fdce0 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 6 D $end
        $var reg 1 & Q $end
      $upscope $end
      $scope module fdce1 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 7 D $end
        $var reg 1 ' Q $end
      $upscope $end
      $scope module fdce2 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 8 D $end
        $var reg 1 ( Q $end
      $upscope $end
      $scope module fdce3 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 9 D $end
        $var reg 1 ) Q $end
      $upscope $end
      $scope module fdce4 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 : D $end
        $var reg 1 * Q $end
      $upscope $end
      $scope module fdce5 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 ; D $end
        $var reg 1 + Q $end
      $upscope $end
      $scope module fdce6 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 < D $end
        $var reg 1 , Q $end
      $upscope $end
      $scope module fdce7 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 = D $end
        $var reg 1 - Q $end
      $upscope $end
      $scope module fdce8 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 > D $end
        $var reg 1 . Q $end
      $upscope $end
      $scope module fdce9 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 ? D $end
        $var reg 1 / Q $end
      $upscope $end
      $scope module fdce10 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 @ D $end
        $var reg 1 0 Q $end
      $upscope $end
      $scope module fdce11 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 A D $end
        $var reg 1 1 Q $end
      $upscope $end
      $scope module fdce12 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 B D $end
        $var reg 1 2 Q $end
      $upscope $end
      $scope module fdce13 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 C D $end
        $var reg 1 3 Q $end
      $upscope $end
      $scope module fdce14 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 D D $end
        $var reg 1 4 Q $end
      $upscope $end
      $scope module fdce15 $end
        $var reg 1 ! clk $end
        $var reg 1 % rst $end
        $var reg 1 " CE $end
        $var reg 1 E D $end
        $var reg 1 5 Q $end
      $upscope $end
      $scope module merge_160 $end
        $var reg 1 & A $end
        $var reg 1 ' B $end
        $var reg 1 ( C $end
        $var reg 1 ) D $end
        $var reg 1 * E $end
        $var reg 1 + F $end
        $var reg 1 , G $end
        $var reg 1 - H $end
        $var reg 1 . I $end
        $var reg 1 / J $end
        $var reg 1 0 K $end
        $var reg 1 1 L $end
        $var reg 1 2 M $end
        $var reg 1 3 N $end
        $var reg 1 4 O $end
        $var reg 1 5 P $end
        $var reg 16 $ Y $end
      $upscope $end
    $upscope $end
    $scope module clock_driver0 $end
      $var reg 1 ! clk $end
    $upscope $end
  $upscope $end

$enddefinitions $end

$dumpvars
0!
0"
b0000000000000000 #
b0000000000000000 $
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
$end
1%
#500
1!
#1000
0!
1"
b1111111111111111 #
16
17
18
19
1:
1;
1<
1=
1>
1?
1@
1A
1B
1C
1D
1E
#1500
1!
#2000
0!
0%
b1011111011101111 #
0D
0>
0:
#2500
1!
15
13
12
11
10
1/
1-
1,
1+
1)
1(
1'
1&
b1011111011101111 $
#3000
0!
b0001001000110100 #
06
07
09
1:
0<
0=
0@
0A
0C
0E
#3500
1!
0&
0'
0)
1*
0,
0-
00
01
03
05
b0001001000110100 $
#4000
0!
0"
b1100101011111110 #
1E
1D
0B
1A
1=
1<
19
17
#4500
1!
#5000
0!
b1000100010001000 #
07
08
0:
0;
0<
0?
0D
#5500
1!
#6000
0!
1"
b1101111010101101 #
1D
1B
1@
1?
1;
18
16
#6500
1!
15
14
11
10
1-
0*
1)
1&
b1101111010101101 $
#7000
0!
1%
b1010101111001101 #
0;
1<
1>
0@
0B
1C
0D
0&
0(
0)
0+
0-
0/
00
01
02
04
05
b0000000000000000 $
#7500
1!
#8000
0!
0%
b0100010101100111 #
0E
1D
0C
0A
1@
0?
0=
1;
09
17
#8500
1!
1&
1'
1(
1+
1,
1.
10
14
b0100010101100111 $
#9000
